{"version":3,"sources":["Navbar.js","TodoList.js","config/server.js","useFetch.js","Home.js","Create.js","TodoDetails.js","NotFondPage.js","App.js","index.js"],"names":["Navbar","className","to","TodoList","todos","title","rmTodo","checkedTodo","rmAllDone","danger","onClick","map","todo","_id","author","type","checked","isDone","onChange","DeleteTwoTone","style","color","twoToneColor","currentUrl","window","location","href","server","startsWith","todo_all","useFetch","url","method","body","abortCont","AbortController","useState","data","setData","isPending","setIsPending","error","setError","useEffect","fetch","JSON","stringify","then","res","ok","Error","json","console","log","catch","err","name","message","abort","Home","pending","setPending","setTodo","fetchAll","process","BASE_URL","id","todo_delete","headers","todo_reverse","Create","setTitle","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","push","required","value","target","TodoDetails","useParams","todo_detail","ArrowLeftOutlined","fontSize","NotFoundPage","status","subTitle","extra","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b90ebc5e.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\nconst Navbar = () => {\n    return (\n      <nav className=\"navbar\">\n        <h1>The Maple TodoList</h1>\n        <div className=\"links\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/create\">\n            New Todo\n            </Link>\n        </div>\n      </nav>\n    );\n  }\n   \nexport default Navbar;","import { DeleteTwoTone } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { Link } from 'react-router-dom'\n\nconst TodoList = ({ todos, title, rmTodo, checkedTodo, rmAllDone}) => {\n    return (\n        <div className=\"todo-list\">\n            <h2>{title}</h2>\n            <Button danger className='clearAll' onClick={()=> rmAllDone()}>Clear All Completed</Button>\n            {\n                todos.map((todo) => (\n                    <div className=\"blog-preview\" key={todo._id}>\n                        <Link to={`/todos/${todo._id}`}>\n                            <h2>{todo.title}</h2>\n                            <p>initiator: {todo.author}</p>\n                        </Link>\n                        <input type=\"checkbox\"\n                            checked={todo.isDone}\n                            onChange={() => checkedTodo(todo._id,!todo.isDone)} />\n                        {/* 不能直接使用函数 应该加()=> */}\n                        <DeleteTwoTone style={{ color: '#fff' }} twoToneColor=\"#f1356d\" className=\"delete\"\n                            onClick={() => rmTodo(todo._id)} />\n                    </div>\n                ))\n            }\n        </div>\n    );\n}\n\nexport default TodoList;","const currentUrl = window.location.href;\nconst checkUrl = !!(\n  currentUrl.startsWith(\"http://localhost\") ||\n  currentUrl.startsWith(\"https://localhost\") ||\n  currentUrl.startsWith(\"http://127.0.0.1\") ||\n  currentUrl.startsWith(\"https://127.0.0.1\")\n);\n\nexport const server = checkUrl\n  ? \"http://localhost:3001\"\n  : \"https://139.155.91.186:3001/\";\n\nexport const todo_all = () => {\n  return `${server}`;\n};\n\nexport const todo_detail = (id) => {\n  return `${server}/${id}`;\n};\n\nexport const todo_create = () => `${server}/create`;\n\nexport const todo_delete = (id) => {\n  return `${server}/${id}`;\n};\n\nexport const todo_reverse = (id) => {\n  return `${server}/${id}`;\n};\n\nexport const todo_clearCompleted = () => `${server}/clear`;\n","import {useState , useEffect} from 'react';\n\nconst useFetch = (url,method,body)=>{\n  const abortCont = new AbortController();\n  const [data,setData] = useState(null)\n  const [isPending,setIsPending] = useState(true)\n  const [error,setError] = useState(null)\n  \n    useEffect(()=>{\n        fetch(url,{\n          method:method,\n          body:JSON.stringify(body)\n        })\n        .then(res =>{\n          if(!res.ok){\n            throw Error('could not fetch data for that resource')\n          }\n          return res.json()\n        })\n        .then(data =>{\n          console.log(data);\n          setData(data);\n          setIsPending(false);\n          setError(null)\n        })\n        .catch(err=>{\n          if(err.name === 'AbortError'){ //如果是中止fetch请求 不会报错\n            console.log('fetch aborted');\n          } else{\n            setError(err.message)\n            setIsPending(false)\n          }\n        })\n        // 此处相当于useEffect hooks函数运行结束 然后返回结果\n        return () =>{ abortCont.abort() } //停止fetch请求 返回错误信息\n      },[url,method])\n\n      return{\n        data,\n        isPending,\n        error\n      }\n}\n\nexport default useFetch","import TodoList from \"./TodoList\";\nimport {\n  todo_all,\n  todo_delete,\n  todo_reverse,\n  todo_clearCompleted,\n} from \"./config/server\";\nimport useFetch from \"./useFetch\";\nimport { useEffect, useState } from \"react\";\n\nconst Home = () => {\n  const { data: todos, isPending, Error } = useFetch(todo_all(), \"GET\");\n  const [pending, setPending] = useState(false);\n  const [todo, setTodo] = useState();\n  useEffect(() => {\n    setTodo(todos);\n  }, [isPending]);\n\n  useEffect(() => {\n    fetchAll();\n  }, [pending]);\n\n  const fetchAll = () => {\n    console.log(process.env.BASE_URL);\n    fetch(todo_all(), {\n      method: \"GET\",\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"could not fetch data for that resource\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setTodo(data);\n      });\n  };\n\n  const rmTodo = (id) => {\n    setPending(true);\n    fetch(todo_delete(id), {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: JSON.stringify(id),\n    }).then(() => {\n      setPending(false);\n    });\n  };\n  const checkedTodo = (id, isDone) => {\n    setPending(true);\n    fetch(todo_reverse(id), {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: JSON.stringify(isDone),\n    }).then(() => {\n      setPending(false);\n    });\n  };\n  const rmAllDone = () => {\n    setPending(true);\n    fetch(todo_clearCompleted(), {\n      method: \"GET\",\n    }).then((res) => {\n      if (!res.ok) {\n        throw Error(\"could not fetch data for that resource\");\n      }\n      setPending(false);\n      return res.json();\n    });\n  };\n\n  return (\n    <div className=\"home\">\n      {todo && (\n        <TodoList\n          todos={todo}\n          rmTodo={rmTodo}\n          checkedTodo={checkedTodo}\n          rmAllDone={rmAllDone}\n          title=\"All todos\"\n        />\n      )}\n      {Error && <div>{Error}</div>}\n      {(isPending || pending) && <div>Loading...</div>}\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport {todo_create} from './config/server'\nimport { useHistory } from \"react-router-dom\";\n\nconst Create = () => {\n    const [title,setTitle] = useState('')\n    const [body,setBody] = useState('')\n    const [author,setAuthor] = useState('')\n    const [isPending,setIsPending] = useState(false)\n    const history = useHistory();\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        const todo = {title,body,author,isDone:false}\n        setIsPending(true)\n        \n        fetch(todo_create(),{\n            method:\"POST\",\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n            body:JSON.stringify(todo)\n        }).then(()=>{\n            setIsPending(false)\n            // history.go(-1) //返回上一步\n            history.push('/')\n        })\n    }\n    return (\n        <div className=\"create\">\n            <h2>Add a New Todo</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Todo Name:</label>\n                <input\n                type=\"text\"\n                required\n                value={title}\n                onChange={(e)=>setTitle(e.target.value)}\n                />\n                \n                <label>Todo Detail:</label>\n                <textarea\n                type=\"text\"\n                required\n                value={body}\n                onChange={(e)=>setBody(e.target.value)}\n                ></textarea>\n  \n                <label>Todo Author:</label>\n                <input\n                type=\"text\"\n                required\n                value={author}\n                onChange={(e)=>setAuthor(e.target.value)}\n                />\n\n                {!isPending&&<button>Add new Todo</button>}\n                {isPending&&<button>Add Todo...</button>}\n            </form>\n        </div>\n    );\n}\n \nexport default Create;","import { useParams,useHistory } from \"react-router-dom\"\nimport {todo_detail} from './config/server'\nimport useFetch from \"./useFetch\";\nimport { ArrowLeftOutlined } from '@ant-design/icons';\n\n\nconst TodoDetails = ()=>{\n    const {id} = useParams();\n    const {data:todo,error,isPending} = useFetch(todo_detail(id),'GET');\n    const history = useHistory()\n    \n    return(\n        <div className=\"blog-details\">\n            <div className=\"backIcon\" onClick={()=>{history.push('/')}}>\n                <ArrowLeftOutlined style={{fontSize:'20px'}}/>\n            </div>\n            {isPending && <div>Loading...</div>}\n            {error && <div>{error}</div>}\n            {todo && (\n                <article>\n                    <h2> {todo.title}</h2>\n                    <p> Create by {todo.author} </p>\n                    <div>{todo.body}</div>\n                </article>\n            )\n            }\n            {/* <h2>Todo details - {id} </h2> */}\n        </div>\n    )\n}\n\nexport default TodoDetails","import { Result, Button } from 'antd';\nimport { useHistory } from 'react-router-dom';\nconst NotFoundPage = () => {\n  const history = useHistory()\n\n    return (\n        <Result\n        status=\"404\"\n        title=\"404\"\n        subTitle=\"Sorry, the page you visited does not exist.\"\n        extra={<Button type=\"primary\" onClick={()=>{history.push('/')}}>Back Home</Button>}\n      />\n    );\n}\n \nexport default NotFoundPage;","import Navbar from \"./Navbar\";\nimport Home from \"./Home\";\n// import '~antd/dist/antd.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Create from \"./Create\";\nimport TodoDetails from \"./TodoDetails\";\nimport NotFoundPage from \"./NotFondPage\";\nfunction App() {\n  return (\n    <Router basename=\"/React-todoList\">\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/create\">\n              <Create />\n            </Route>\n            <Route exact path=\"/todos/:id\">\n              <TodoDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFoundPage />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}