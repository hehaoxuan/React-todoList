{"version":3,"sources":["Navbar.js","TodoList.js","config/server.js","useFetch.js","Home.js","Create.js","TodoDetails.js","NotFondPage.js","App.js","index.js"],"names":["Navbar","className","to","TodoList","todos","title","rmTodo","checkedTodo","rmAllDone","danger","onClick","map","todo","_id","author","type","checked","isDone","onChange","DeleteTwoTone","style","color","twoToneColor","server","process","BASE_URL","todo_all","useFetch","url","method","body","abortCont","AbortController","useState","data","setData","isPending","setIsPending","error","setError","useEffect","fetch","JSON","stringify","then","res","ok","Error","json","console","log","catch","err","name","message","abort","Home","pending","setPending","setTodo","fetchAll","id","todo_delete","headers","todo_reverse","Create","setTitle","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","push","required","value","target","TodoDetails","useParams","todo_detail","ArrowLeftOutlined","fontSize","NotFoundPage","status","subTitle","extra","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38cf4b03.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\r\nconst Navbar = () => {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <h1>The Maple TodoList</h1>\r\n        <div className=\"links\">\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/create\">\r\n            New Todo\r\n            </Link>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n   \r\nexport default Navbar;","import { DeleteTwoTone } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst TodoList = ({ todos, title, rmTodo, checkedTodo, rmAllDone}) => {\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <h2>{title}</h2>\r\n            <Button danger className='clearAll' onClick={()=> rmAllDone()}>Clear All Completed</Button>\r\n            {\r\n                todos.map((todo) => (\r\n                    <div className=\"blog-preview\" key={todo._id}>\r\n                        <Link to={`/todos/${todo._id}`}>\r\n                            <h2>{todo.title}</h2>\r\n                            <p>initiator: {todo.author}</p>\r\n                        </Link>\r\n                        <input type=\"checkbox\"\r\n                            checked={todo.isDone}\r\n                            onChange={() => checkedTodo(todo._id,!todo.isDone)} />\r\n                        {/* 不能直接使用函数 应该加()=> */}\r\n                        <DeleteTwoTone style={{ color: '#fff' }} twoToneColor=\"#f1356d\" className=\"delete\"\r\n                            onClick={() => rmTodo(todo._id)} />\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","export const server = process.env.BASE_URL\r\n  ? \"http://139.155.91.186:3001/\"\r\n  : \"http://localhost:3001\";\r\n\r\nexport const todo_all = () => {\r\n  return `${server}`;\r\n};\r\n\r\nexport const todo_detail = (id) => {\r\n  return `${server}/${id}`;\r\n};\r\n\r\nexport const todo_create = () => `${server}/create`;\r\n\r\nexport const todo_delete = (id) => {\r\n  return `${server}/${id}`;\r\n};\r\n\r\nexport const todo_reverse = (id) => {\r\n  return `${server}/${id}`;\r\n};\r\n\r\nexport const todo_clearCompleted = () => `${server}/clear`;\r\n","import {useState , useEffect} from 'react';\r\n\r\nconst useFetch = (url,method,body)=>{\r\n  const abortCont = new AbortController();\r\n  const [data,setData] = useState(null)\r\n  const [isPending,setIsPending] = useState(true)\r\n  const [error,setError] = useState(null)\r\n  \r\n    useEffect(()=>{\r\n        fetch(url,{\r\n          method:method,\r\n          body:JSON.stringify(body)\r\n        })\r\n        .then(res =>{\r\n          if(!res.ok){\r\n            throw Error('could not fetch data for that resource')\r\n          }\r\n          return res.json()\r\n        })\r\n        .then(data =>{\r\n          console.log(data);\r\n          setData(data);\r\n          setIsPending(false);\r\n          setError(null)\r\n        })\r\n        .catch(err=>{\r\n          if(err.name === 'AbortError'){ //如果是中止fetch请求 不会报错\r\n            console.log('fetch aborted');\r\n          } else{\r\n            setError(err.message)\r\n            setIsPending(false)\r\n          }\r\n        })\r\n        // 此处相当于useEffect hooks函数运行结束 然后返回结果\r\n        return () =>{ abortCont.abort() } //停止fetch请求 返回错误信息\r\n      },[url,method])\r\n\r\n      return{\r\n        data,\r\n        isPending,\r\n        error\r\n      }\r\n}\r\n\r\nexport default useFetch","import TodoList from \"./TodoList\";\r\nimport {\r\n  todo_all,\r\n  todo_delete,\r\n  todo_reverse,\r\n  todo_clearCompleted,\r\n} from \"./config/server\";\r\nimport useFetch from \"./useFetch\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Home = () => {\r\n  const { data: todos, isPending, Error } = useFetch(todo_all(), \"GET\");\r\n  const [pending, setPending] = useState(false);\r\n  const [todo, setTodo] = useState();\r\n  useEffect(() => {\r\n    setTodo(todos);\r\n  }, [isPending]);\r\n\r\n  useEffect(() => {\r\n    fetchAll();\r\n  }, [pending]);\r\n\r\n  const fetchAll = () => {\r\n    fetch(todo_all(), {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw Error(\"could not fetch data for that resource\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setTodo(data);\r\n      });\r\n  };\r\n\r\n  const rmTodo = (id) => {\r\n    setPending(true);\r\n    fetch(todo_delete(id), {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      body: JSON.stringify(id),\r\n    }).then(() => {\r\n      setPending(false);\r\n    });\r\n  };\r\n  const checkedTodo = (id, isDone) => {\r\n    setPending(true);\r\n    fetch(todo_reverse(id), {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      body: JSON.stringify(isDone),\r\n    }).then(() => {\r\n      setPending(false);\r\n    });\r\n  };\r\n  const rmAllDone = () => {\r\n    setPending(true);\r\n    fetch(todo_clearCompleted(), {\r\n      method: \"GET\",\r\n    }).then((res) => {\r\n      if (!res.ok) {\r\n        throw Error(\"could not fetch data for that resource\");\r\n      }\r\n      setPending(false);\r\n      return res.json();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {todo && (\r\n        <TodoList\r\n          todos={todo}\r\n          rmTodo={rmTodo}\r\n          checkedTodo={checkedTodo}\r\n          rmAllDone={rmAllDone}\r\n          title=\"All todos\"\r\n        />\r\n      )}\r\n      {Error && <div>{Error}</div>}\r\n      {(isPending || pending) && <div>Loading...</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport {todo_create} from './config/server'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n    const [title,setTitle] = useState('')\r\n    const [body,setBody] = useState('')\r\n    const [author,setAuthor] = useState('')\r\n    const [isPending,setIsPending] = useState(false)\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        const todo = {title,body,author,isDone:false}\r\n        setIsPending(true)\r\n        \r\n        fetch(todo_create(),{\r\n            method:\"POST\",\r\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n            body:JSON.stringify(todo)\r\n        }).then(()=>{\r\n            setIsPending(false)\r\n            // history.go(-1) //返回上一步\r\n            history.push('/')\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"create\">\r\n            <h2>Add a New Todo</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Todo Name:</label>\r\n                <input\r\n                type=\"text\"\r\n                required\r\n                value={title}\r\n                onChange={(e)=>setTitle(e.target.value)}\r\n                />\r\n                \r\n                <label>Todo Detail:</label>\r\n                <textarea\r\n                type=\"text\"\r\n                required\r\n                value={body}\r\n                onChange={(e)=>setBody(e.target.value)}\r\n                ></textarea>\r\n  \r\n                <label>Todo Author:</label>\r\n                <input\r\n                type=\"text\"\r\n                required\r\n                value={author}\r\n                onChange={(e)=>setAuthor(e.target.value)}\r\n                />\r\n\r\n                {!isPending&&<button>Add new Todo</button>}\r\n                {isPending&&<button>Add Todo...</button>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Create;","import { useParams,useHistory } from \"react-router-dom\"\r\nimport {todo_detail} from './config/server'\r\nimport useFetch from \"./useFetch\";\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst TodoDetails = ()=>{\r\n    const {id} = useParams();\r\n    const {data:todo,error,isPending} = useFetch(todo_detail(id),'GET');\r\n    const history = useHistory()\r\n    \r\n    return(\r\n        <div className=\"blog-details\">\r\n            <div className=\"backIcon\" onClick={()=>{history.push('/')}}>\r\n                <ArrowLeftOutlined style={{fontSize:'20px'}}/>\r\n            </div>\r\n            {isPending && <div>Loading...</div>}\r\n            {error && <div>{error}</div>}\r\n            {todo && (\r\n                <article>\r\n                    <h2> {todo.title}</h2>\r\n                    <p> Create by {todo.author} </p>\r\n                    <div>{todo.body}</div>\r\n                </article>\r\n            )\r\n            }\r\n            {/* <h2>Todo details - {id} </h2> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoDetails","import { Result, Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nconst NotFoundPage = () => {\r\n  const history = useHistory()\r\n\r\n    return (\r\n        <Result\r\n        status=\"404\"\r\n        title=\"404\"\r\n        subTitle=\"Sorry, the page you visited does not exist.\"\r\n        extra={<Button type=\"primary\" onClick={()=>{history.push('/')}}>Back Home</Button>}\r\n      />\r\n    );\r\n}\r\n \r\nexport default NotFoundPage;","import Navbar from \"./Navbar\";\r\nimport Home from \"./Home\";\r\n// import '~antd/dist/antd.css';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Create from \"./Create\";\r\nimport TodoDetails from \"./TodoDetails\";\r\nimport NotFoundPage from \"./NotFondPage\";\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/React-todoList\">\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/create\">\r\n              <Create />\r\n            </Route>\r\n            <Route exact path=\"/todos/:id\">\r\n              <TodoDetails />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <NotFoundPage />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}